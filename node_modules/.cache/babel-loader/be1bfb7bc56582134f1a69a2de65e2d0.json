{"ast":null,"code":"// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\"; // Requires\n\nvar Typo = require(\"typo-js\"); // Create function\n\n\nfunction CodeMirrorSpellChecker(options) {\n  // Initialize\n  options = options || {}; // Verify\n\n  if (typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n    console.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n    return;\n  } // Because some browsers don't support this functionality yet\n\n\n  if (!String.prototype.includes) {\n    String.prototype.includes = function () {\n      \"use strict\";\n\n      return String.prototype.indexOf.apply(this, arguments) !== -1;\n    };\n  } // Define the new mode\n\n\n  options.codeMirrorInstance.defineMode(\"spell-checker\", function (config) {\n    // Load AFF/DIC data\n    if (!CodeMirrorSpellChecker.aff_loading) {\n      CodeMirrorSpellChecker.aff_loading = true;\n      var xhr_aff = new XMLHttpRequest();\n      xhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\n      xhr_aff.onload = function () {\n        if (xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n          CodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n          CodeMirrorSpellChecker.num_loaded++;\n\n          if (CodeMirrorSpellChecker.num_loaded == 2) {\n            CodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n              platform: \"any\"\n            });\n          }\n        }\n      };\n\n      xhr_aff.send(null);\n    }\n\n    if (!CodeMirrorSpellChecker.dic_loading) {\n      CodeMirrorSpellChecker.dic_loading = true;\n      var xhr_dic = new XMLHttpRequest();\n      xhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\n      xhr_dic.onload = function () {\n        if (xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n          CodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n          CodeMirrorSpellChecker.num_loaded++;\n\n          if (CodeMirrorSpellChecker.num_loaded == 2) {\n            CodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n              platform: \"any\"\n            });\n          }\n        }\n      };\n\n      xhr_dic.send(null);\n    } // Define what separates a word\n\n\n    var rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \"; // Create the overlay and such\n\n    var overlay = {\n      token: function (stream) {\n        var ch = stream.peek();\n        var word = \"\";\n\n        if (rx_word.includes(ch)) {\n          stream.next();\n          return null;\n        }\n\n        while ((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n          word += ch;\n          stream.next();\n        }\n\n        if (CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word)) return \"spell-error\"; // CSS class: cm-spell-error\n\n        return null;\n      }\n    };\n    var mode = options.codeMirrorInstance.getMode(config, config.backdrop || \"text/plain\");\n    return options.codeMirrorInstance.overlayMode(mode, overlay, true);\n  });\n} // Initialize data globally to reduce memory consumption\n\n\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo; // Export\n\nmodule.exports = CodeMirrorSpellChecker;","map":{"version":3,"names":["Typo","require","CodeMirrorSpellChecker","options","codeMirrorInstance","defineMode","console","log","String","prototype","includes","indexOf","apply","arguments","config","aff_loading","xhr_aff","XMLHttpRequest","open","onload","readyState","status","aff_data","responseText","num_loaded","typo","dic_data","platform","send","dic_loading","xhr_dic","rx_word","overlay","token","stream","ch","peek","word","next","check","mode","getMode","backdrop","overlayMode","module","exports"],"sources":["/Users/vladkost/Library/Mobile Documents/com~apple~CloudDocs/Files/Program Files Code/JabaScripBs/react2023_frontend/node_modules/codemirror-spell-checker/src/js/spell-checker.js"],"sourcesContent":["// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\";\n\n\n// Requires\nvar Typo = require(\"typo-js\");\n\n\n// Create function\nfunction CodeMirrorSpellChecker(options) {\n\t// Initialize\n\toptions = options || {};\n\n\n\t// Verify\n\tif(typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n\t\tconsole.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n\t\treturn;\n\t}\n\n\n\t// Because some browsers don't support this functionality yet\n\tif(!String.prototype.includes) {\n\t\tString.prototype.includes = function() {\n\t\t\t\"use strict\";\n\t\t\treturn String.prototype.indexOf.apply(this, arguments) !== -1;\n\t\t};\n\t}\n\n\n\t// Define the new mode\n\toptions.codeMirrorInstance.defineMode(\"spell-checker\", function(config) {\n\t\t// Load AFF/DIC data\n\t\tif(!CodeMirrorSpellChecker.aff_loading) {\n\t\t\tCodeMirrorSpellChecker.aff_loading = true;\n\t\t\tvar xhr_aff = new XMLHttpRequest();\n\t\t\txhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\t\t\txhr_aff.onload = function() {\n\t\t\t\tif(xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_aff.send(null);\n\t\t}\n\n\t\tif(!CodeMirrorSpellChecker.dic_loading) {\n\t\t\tCodeMirrorSpellChecker.dic_loading = true;\n\t\t\tvar xhr_dic = new XMLHttpRequest();\n\t\t\txhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\t\t\txhr_dic.onload = function() {\n\t\t\t\tif(xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_dic.send(null);\n\t\t}\n\n\n\t\t// Define what separates a word\n\t\tvar rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \";\n\n\n\t\t// Create the overlay and such\n\t\tvar overlay = {\n\t\t\ttoken: function(stream) {\n\t\t\t\tvar ch = stream.peek();\n\t\t\t\tvar word = \"\";\n\n\t\t\t\tif(rx_word.includes(ch)) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\twhile((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n\t\t\t\t\tword += ch;\n\t\t\t\t\tstream.next();\n\t\t\t\t}\n\n\t\t\t\tif(CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word))\n\t\t\t\t\treturn \"spell-error\"; // CSS class: cm-spell-error\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tvar mode = options.codeMirrorInstance.getMode(\n\t\t\tconfig, config.backdrop || \"text/plain\"\n\t\t);\n\n\t\treturn options.codeMirrorInstance.overlayMode(mode, overlay, true);\n\t});\n}\n\n\n// Initialize data globally to reduce memory consumption\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo;\n\n\n// Export\nmodule.exports = CodeMirrorSpellChecker;"],"mappings":"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"},"metadata":{},"sourceType":"script"}